pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "astrid21/messaging_app"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Bemnet57/alx-backend-python.git',
                    credentialsId: 'github-creds'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip3 install --upgrade pip
                    pip3 install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    . venv/bin/activate
                    pytest messaging_app --junitxml=report.xml
                '''
            }
            post {
                always {
                    junit 'report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                        docker build -t $DOCKER_IMAGE:latest -f messaging_app/Dockerfile .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE:latest
                    '''
                }
            }
        }
    }
}


// pipeline {
//     agent any

//     stages {
//         stage('Checkout') {
//             steps {
//                 git branch: 'main',
//                     url: 'https://github.com/Bemnet57/alx-backend-python.git',
//                     credentialsId: 'github-creds'
//             }
//         }

//         stage('Install Dependencies') {
//             steps {
//                 sh '''
//                     python3 -m venv venv
//                     . venv/bin/activate
//                     pip3 install --upgrade pip
//                     pip3 install -r messaging_app/requirements.txt
//                 '''
//             }
//         }

//         stage('Run Tests') {
//             steps {
//                 sh '''
//                     . venv/bin/activate
//                     pytest messaging_app --junitxml=report.xml
//                 '''
//             }
//             post {
//                 always {
//                     junit 'report.xml'
//                 }
//             }
//         }
//     }
// }




// // pipeline {
// //     agent any

// //     environment {
// //         // Path to Python virtualenv (ShiningPanda will handle it)
// //         PYTHON_ENV = 'venv'
// //     }

// //     stages {
// //         stage('Checkout') {
// //             steps {
// //                 git branch: 'main',
// //                     url: 'https://github.com/<your-username>/alx-backend-python.git',
// //                     credentialsId: 'github-creds'
// //             }
// //         }

// //         stage('Setup Python') {
// //             steps {
// //                 // ShiningPanda plugin: create & use virtualenv with Python 3
// //                 withPythonEnv('/usr/bin/python3') {
// //                     sh '''
// //                         pip install --upgrade pip
// //                         pip install -r messaging_app/requirements.txt
// //                     '''
// //                 }
// //             }
// //         }

// //         stage('Run Tests') {
// //             steps {
// //                 withPythonEnv('/usr/bin/python3') {
// //                     sh '''
// //                         cd messaging_app
// //                         pytest --junitxml=report.xml
// //                     '''
// //                 }
// //             }
// //             post {
// //                 always {
// //                     junit 'messaging_app/report.xml'
// //                 }
// //             }
// //         }
// //     }

// //     triggers {
// //         // Manual trigger (no SCM polling, no webhooks)
// //     }
// // }
